---
export interface Props {
  type?: 'info' | 'success' | 'warning' | 'error';
  title?: string;
  dismissible?: boolean;
}

const { type = 'info', title, dismissible = false } = Astro.props;

const typeStyles = {
  info: 'bg-blue-50 border-blue-200 text-blue-800',
  success: 'bg-green-50 border-green-200 text-green-800',
  warning: 'bg-yellow-50 border-yellow-200 text-yellow-800',
  error: 'bg-red-50 border-red-200 text-red-800'
};

const iconMap = {
  info: 'üí°',
  success: '‚úÖ',
  warning: '‚ö†Ô∏è',
  error: '‚ùå'
};
---

<div class={`p-4 border rounded-lg ${typeStyles[type]}`} role="alert">
  <div class="flex items-start">
    <span class="text-lg mr-3">{iconMap[type]}</span>
    <div class="flex-1">
      {title && (
        <h4 class="font-semibold mb-1">{title}</h4>
      )}
      <div class="text-sm">
        <slot />
      </div>
    </div>
    {dismissible && (
      <button 
        class="ml-3 text-lg opacity-70 hover:opacity-100"
        onclick="this.parentElement.parentElement.style.display='none'"
      >
        √ó
      </button>
    )}
  </div>
</div>
